library(tidyverse)
library(readxl)
remains = read_xls('remains.xlsx')
remains = read_xlsx('remains.xlsx')
View(remains)
View(remains)
View(remains)
View(remains)
colnames(remains) = c('id', 'size', 'free_count', 'self_cost', 'sell_cost')
View(remains)
View(remains)
sells = read_xlsx('sells.xlsx')
colnames(sells) = c('id_old', 'size', 'month', 'sell_count')
View(sells)
View(sells)
new.id = sells$id_old
for(id in new.id){
if(grepl('/', id)){
print(id)
}
}
for(id in new.id){
if(grepl('/', id)){
pair = strsplit(id, '/')
print(pair)
}
}
View(remains)
View(remains)
for(id in new.id){
if(grepl('/', id)){
pair = strsplit(id, '/')
if(nchar(pair[1])==12){
id = paste0(pair[1],pair[2])
print(id)
}
}
}
for(id in new.id){
if(grepl('/', id)){
pair = strsplit(id, '/')[[1]]
if(nchar(pair[1])==12){
id = paste0(pair[1],pair[2])
print(id)
}
}
}
'abcd'[1:2]
as.character('abcd')[1:2]
substr('abcd',1,2)
for(id in new.id){
if(grepl('/', id)){
pair = strsplit(id, '/')[[1]]
if(nchar(pair[1])==12){
id = paste0(pair[1],pair[2])
}else if(nchar(pair[1])==14){
left12 = substr(pair[1],1,12)
last2 = substr(pair[1],13,14)
right = substr(pair[2],1,2)
id = paste0(left12, right, last2)
print(id)
}else{
id = pair[1]
}
}
}
sells$id_old = new.id
colnames(sells)[1] = 'id'
remains$id = str_remove(remains$id, ' ')
View(remains)
View(remains)
sell_unique = unique(sells$id)
View(sells)
View(sells)
source('C:/Users/qtckp/OneDrive/Рабочий стол/Garbage_code/Sobes 07 08 2020/base_script.R')
remains_unique = unique(remains$id)
diffs = setdiff(sell_unique, remains_unique)
View(remains)
View(remains)
View(remains)
View(remains)
remains = rbind(remains, tibble(id = diffs, size = sells$size[sells$id == diffs], free_count = 0, self_cost = 200, sell_cost = 1000 ))
remains = rbind(remains,
tibble(id = diffs,
size = sapply(diffs, function(d) sells[sells$id == d,2][1] ),#sells$size[sells$id == diffs],
free_count = 0, self_cost = 200, sell_cost = 1000 ))
View(remains)
View(remains)
sizes = sapply(diffs, function(d) sells[sells$id == d,2] )
View(sizes)
View(sizes)
sizes = sapply(diffs, function(d) sells[sells$id == d,2][1] )
View(sizes)
View(sizes)
sizes = sapply(diffs, function(d) sells[sells$id == d,2][[1]] )
View(sizes)
View(sizes)
sizes = sapply(diffs, function(d) sells[sells$id == d,2][[1]][[1]] )
source('C:/Users/qtckp/OneDrive/Рабочий стол/Garbage_code/Sobes 07 08 2020/base_script.R')
View(remains)
View(remains)
source('C:/Users/qtckp/OneDrive/Рабочий стол/Garbage_code/Sobes 07 08 2020/base_script.R')
merged = merge(sells, remains)
View(merged)
View(merged)
source('C:/Users/qtckp/OneDrive/Рабочий стол/Garbage_code/Sobes 07 08 2020/base_script.R')
View(sum_july)
View(sum_july)
sum_july = merged %>% filter(mounth == 7) %>% summarise(s = sum(sell_count * sell_cost))[[1]]
sum_july = merged %>% filter(mounth == 7) %>% summarise(s = sum(sell_count * sell_cost))
print(sum_july[[1]])
sum_october = merged %>% filter(mounth == 10) %>% summarise(s = sum(sell_count * (sell_cost - self_cost)))
print(sum_october[[1]])
august = merged %>% filter(mounth == 8) %>% group_by(id) %>% summarise(r = sum(sell_count * sell_cost)) %>% arrange(-r)
View(august)
View(august)
remain = merged[august$id[1:10], ]
View(remain)
View(remain)
august$id[1:10]
remain = merged[id == august$id[1:10], ]
View(remain)
View(remain)
remain = sapply(august$id[1:10], function(d) merged$free_count[merged$id == d] )
View(remain)
View(remain)
remain = sapply(august$id[1:10], function(d) merged$free_count[merged$id == d][[1]][[1]] )
print(sum(remain))
merged %>% select(id, size) %>% filter_if(starts_with('X', 'S', 'M', 'L'))
ggplot(
merged %>% select(id, size) %>% filter_if(starts_with(c('X', 'S', 'M', 'L')))
)
ggplot(
merged %>% select(id, size) %>% filter_if(str_detect(size, c('X', 'S', 'M', 'L')))
)
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]'))
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = size, y= count) + geom_bar() + theme_bw()
)
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = size, y = count)
)+ geom_bar() + theme_bw()
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = factor(size), y = count)
)+ geom_bar() + theme_bw()
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n())
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = factor(size), y = count)
) + geom_col() + theme_bw()
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate(x = 1:9, y = count + 10, label = 'no')
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate(x = 1:9, y = count, label = 'no')
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate(x = 1:9, y = 10, label = 'no')
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = 10, label = 'no')
ggplot(
merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n()),
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = count + 10, label = 'no')
tb = merged %>% select(id, size) %>% filter(str_detect(size, '[XSML]')) %>%
group_by(size) %>% summarise(count = n())
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 10, label = 'no')
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 30, label = as.character(tb$count))
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 60, label = as.character(tb$count))
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 90, label = as.character(tb$count))
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 110, label = as.character(tb$count))
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 120, label = as.character(tb$count), size = 2)
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 120, label = as.character(tb$count), size = 20)
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 120, label = as.character(tb$count), size = 6)
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 120, label = as.character(tb$count), size = 5)
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 140, label = as.character(tb$count), size = 5)
ggplot(
tb,
aes(x = factor(size), y = count)
) + geom_col() + theme_bw() + labs(x = 'size', title = 'Count of products by size')+
annotate("text", x = 1:9, y = tb$count + 150, label = as.character(tb$count), size = 5)
