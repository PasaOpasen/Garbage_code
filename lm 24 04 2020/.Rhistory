library(tidyverse)
library(magrittr)
library(car)
# функция для оценки качества модели
mysummary = function(mdl) {
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n")
cat("\n")
gvlma::gvlma(mdl) %>% summary()
cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n")
cat("\n")
par(mfrow = c(2, 2))
plot(mdl)
par(mfrow = c(1, 1))
cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n")
cat("\n")
shapiro.test(mdl$residuals) %>% print()
cat("\n")
qqPlot(mdl, main = "Q-Q plot")
cat("-----> ФАКТОР ИНФЛЯЦИИ ДИСПЕРСИЙ:\n")
cat("\n")
vif(mdl) %>% print()
cat("\n")
cat("-----> ТЕСТ НА АВТОКОРРЕЛЯЦИЮ:\n")
cat("\n")
durbinWatsonTest(mdl) %>% print()
cat("\n")   #тест на автокорреляцию
# cat("-----> ТЕСТ НА ОДНОРОДНОСТЬ ДИСПЕРСИИ:\n");cat("\n")
# ncvTest(mdl)%>% print();cat("\n")    #однородность дисперсии
cat("-----> ТЕСТ НА ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
cat("\n")
outs = outlierTest(mdl)
outs %>% print()
influ = influencePlot(mdl, main = "Диаграмма влияния", sub = "Размеры кругов пропорциональны расстояниям Кука")
influ %>% print()
cat("-----> ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
cat("\n")
data[c(outs$p %>% names(), influ %>% rownames()) %>% as.numeric(), ] %>% unique() %>%
select(-Mail) %>% arrange(-RM, -Count) %>% print()
cat("\n")
}
df=mtcars
psych::describe(mtcars)
summary(mtcars)
sapply(df, mean)
corrplot::corrplot(cor(df))
corrplot::corrplot(cor(df),method=c('square','number'))
corrplot::corrplot(cor(df),method='number')
corrplot::corrplot(cor(df),method='pie')
corrplot::corrplot(cor(df),method='number')
cor.test(df[[1]],df[[2]])
psych::principal(df, nfactors = 10, rotate = "none")
GGally::ggpairs(df)
summary(aov(mpg~.,df))
df=DNase
psych::describe(df)
summary(df)
sapply(df[,-1], mean)
GGally::ggpairs(df)
corrplot::corrplot(cor(df),method='number')
corrplot::corrplot(cor(df[,-1]),method='number')
cor.test(df[[2]],df[[3]])
summary(aov(Run~.,df))
df
summary(aov(Run~.,df))
summary(aov(conc ~ .,df))
psych::principal(df, nfactors = 10, rotate = "none")
coplot(density ~ conc | Run, data = DNase,
show.given = FALSE, type = "b")
summary(df)
cor.test(df$conc,df$density)
fit=lm(density~conc)
fit=lm(density~conc,df)
# функция для оценки качества модели
mysummary = function(mdl) {
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n")
cat("\n")
gvlma::gvlma(mdl) %>% summary()
cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n")
cat("\n")
par(mfrow = c(2, 2))
plot(mdl)
par(mfrow = c(1, 1))
cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n")
cat("\n")
shapiro.test(mdl$residuals) %>% print()
cat("\n")
qqPlot(mdl, main = "Q-Q plot")
cat("-----> ФАКТОР ИНФЛЯЦИИ ДИСПЕРСИЙ:\n")
cat("\n")
vif(mdl) %>% print()
cat("\n")
cat("-----> ТЕСТ НА АВТОКОРРЕЛЯЦИЮ:\n")
cat("\n")
durbinWatsonTest(mdl) %>% print()
cat("\n")   #тест на автокорреляцию
# cat("-----> ТЕСТ НА ОДНОРОДНОСТЬ ДИСПЕРСИИ:\n");cat("\n")
# ncvTest(mdl)%>% print();cat("\n")    #однородность дисперсии
cat("-----> ТЕСТ НА ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
cat("\n")
outs = outlierTest(mdl)
outs %>% print()
influ = influencePlot(mdl, main = "Диаграмма влияния", sub = "Размеры кругов пропорциональны расстояниям Кука")
influ %>% print()
cat("-----> ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
cat("\n")
data[c(outs$p %>% names(), influ %>% rownames()) %>% as.numeric(), ] %>% unique() %>%
select(-Mail) %>% arrange(-RM, -Count) %>% print()
cat("\n")
}
mysummary(fit)
fit=lm(density~conc:Run,df)
mysummary(fit)
# функция для оценки качества модели
mysummary = function(mdl) {
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n")
cat("\n")
gvlma::gvlma(mdl) %>% summary()
cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n")
cat("\n")
par(mfrow = c(2, 2))
plot(mdl)
par(mfrow = c(1, 1))
cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n")
cat("\n")
shapiro.test(mdl$residuals) %>% print()
cat("\n")
qqPlot(mdl, main = "Q-Q plot")
cat("-----> ТЕСТ НА ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
cat("\n")
outs = outlierTest(mdl)
outs %>% print()
influ = influencePlot(mdl, main = "Диаграмма влияния", sub = "Размеры кругов пропорциональны расстояниям Кука")
influ %>% print()
cat("-----> ВЫБРОСЫ И ВЛИЯТЕЛЬНЫЕ НАБЛЮДЕНИЯ:\n")
cat("\n")
data[c(outs$p %>% names(), influ %>% rownames()) %>% as.numeric(), ] %>% unique() %>%
select(-Mail) %>% arrange(-RM, -Count) %>% print()
cat("\n")
}
mysummary(fit)
# функция для оценки качества модели
mysummary = function(mdl) {
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n")
cat("\n")
gvlma::gvlma(mdl) %>% summary()
cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n")
cat("\n")
par(mfrow = c(2, 2))
plot(mdl)
par(mfrow = c(1, 1))
cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n")
cat("\n")
shapiro.test(mdl$residuals) %>% print()
cat("\n")
qqPlot(mdl, main = "Q-Q plot")
}
mysummary(fit)
psych::describe(df)
summary(df)
GGally::ggpairs(df)
GGally::ggpairs(df,
lower = list(continuous = "points", combo = "box_no_facet", discrete = "facetbar", na =
"na"))
()
ggplot(df,aes(y=density,x=conc,col=Run))+geom_point()
ps=ggplot(df,aes(y=density,x=conc,col=Run))+geom_point()+theme_bw()
ps
ps+facet_grid(vars(Run))
summary(aov(conc ~ .,df))
summary(aov(density ~ .,df))
summary(aov(density ~ conc^2 ,df))
summary(aov(density ~ conc+Run ,df))
summary(aov(density ~ conc+Run:conc ,df))
summary(aov(density ~ conc+Run:conc +Run,df))# дисперсионный анализ подтверждает наличие зависимости, однако от фактора зависимости не выявлено
cor.test(df$conc,df$density)
fit1=lm(density~conc,df)
mysummary(fit1)
fit2=lm(sqrt(density)~conc,df)
mysummary(fit2)
fit2=lm(density~sqrt(conc),df)
mysummary(fit2)
fit3=lm(density~sqrt(conc):Run,df)
mysummary(fit3)
ps
fit4=lm(density~sqrt(conc):Run+as.numeric(Run),df)
mysummary(fit4)
fit4=lm(density~sqrt(conc):Run+conc:Run,df)
mysummary(fit4)
boxCoxVariable(df$density)
fit5=lm(boxCoxVariable(density)~sqrt(conc):Run,df)
mysummary(fit5)
fit5=lm(boxCoxVariable(density)~boxCoxVariable(conc):Run,df)
mysummary(fit5)
fit5=lm(boxCoxVariable(density)~conc:Run,df)
mysummary(fit5)
fm1 <- nls(density ~ SSlogis( log(conc), Asym, xmid, scal ),
data = DNase, subset = Run == 1)
## compare with a four-parameter logistic
fm2 <- nls(density ~ SSfpl( log(conc), A, B, xmid, scal ),
data = DNase, subset = Run == 1)
summary(fm2)
anova(fm1, fm2)
fit5=lm(boxCoxVariable(density)~sqrt(conc):Run+conc:Run,df)
mysummary(fit5)
fit5=lm(boxCoxVariable(density)~poly(conc,3):Run,df)
mysummary(fit5)
fit5=lm(boxCoxVariable(density)~poly(sqrt(conc),4):Run,df)
mysummary(fit5)
fit4=lm(density~sqrt(conc):Run+conc:Run,df)
mysummary(fit4)
fit1$residuals
# функция для оценки качества модели
mysummary = function(mdl) {
cat("-----> ОБЩАЯ ИНФОРМАЦИЯ О МОДЕЛИ:\n")
cat("-----> Точность = " ,mdl$residuals^2 %>% mean(),'\n')
cat("\n")
gvlma::gvlma(mdl) %>% summary()
cat("\n")
cat("-----> БАЗОВЫЕ ГРАФИКИ:\n")
cat("\n")
par(mfrow = c(2, 2))
plot(mdl)
par(mfrow = c(1, 1))
cat("\n")
cat("-----> ТЕСТ НА НОРМАЛЬНОСТЬ РАСПРЕДЕЛЕНИЯ ОСТАТКОВ\n")
cat("\n")
shapiro.test(mdl$residuals) %>% print()
cat("\n")
qqPlot(mdl, main = "Q-Q plot")
}
mysummary(fit4)
(predict(fm2,df)-df$density)^2 %>% mean()
anova(fm1, fm2)
mysummary(fit4)
(predict(fm1,df)-df$density)^2 %>% mean()
fit4=lm(density~sqrt(conc):Run+conc:Run+log(conc):Run,df)
mysummary(fit4)
fit4=lm(density~sqrt(conc):Run+conc:Run+log(conc):Run+I(conc^2):Run,df)
mysummary(fit4)
fit4=lm(density~sqrt(conc):Run+conc:Run+I(conc^2):Run,df)
mysummary(fit4)
fit4=lm(density~sqrt(conc):Run+conc:Run+log(conc):Run,df)
mysummary(fit4)
fit4=lm(density~sqrt(conc):Run+conc:Run+I(conc^2):Run,df)
mysummary(fit4)
ps=ggplot(df,aes(y=density,x=conc,col=Run))+geom_point(size=4)+theme_bw()
ps
ps+facet_grid(vars(Run))# из этого графика видно, что зависимость между кол. переменными для каждого уровня Run очень схожая и похода на sqrt
ps+facet_wrap(.~Run)# из этого графика видно, что зависимость между кол. переменными для каждого уровня Run очень схожая и похода на sqrt
# основные статистики
psych::describe(df)
sapply(df[,-1] , function(x) mean(sin(x)))
